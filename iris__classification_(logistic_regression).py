# -*- coding: utf-8 -*-
"""iris _classification (logistic regression).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KIKBXuRhF6jD081BQRCsYsYaivfzYBHe

#**Logistic Regression**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re
from sklearn.datasets import load_iris

"""Import the data"""

dat = load_iris()

df = pd.DataFrame(dat.data)
df.columns = load_iris().feature_names
df.head()

df.tail()

df.shape

df.info()

dat.target

dat.feature_names

"""importing from drive"""

new_df = pd.read_csv('https://gist.githubusercontent.com/netj/8836201/raw/6f9306ad21398ea43cba4f7d537619d0e07d5ae3/iris.csv')

new_df.head()

new_df.variety.unique()

from sklearn.preprocessing import LabelEncoder
encoder = LabelEncoder()

new_df.variety = encoder.fit_transform(new_df.variety)

new_df

new_df.isna().sum()

new_df.variety.nunique()

sns.pairplot(new_df)

sns.heatmap(data = new_df.corr(),annot =True)

"""Splitting the data"""

from sklearn.model_selection import train_test_split

X = np.array(new_df.iloc[:,[0,1,2,3]].values)
y =np.array(new_df.iloc[:,[4]].values)

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.25,random_state =0)

"""preprocessing"""

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()

X_train = sc.fit_transform(X_train)
X_test = sc.fit_transform(X_test)

"""Logistic Regression"""

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

model.fit(X_train,y_train)

y_pred = model.predict(X_test)

comp = pd.DataFrame({'Act': y_test.ravel(),'pred':y_pred})

comp

sns.heatmap(data = comp.corr(),annot =True)

"""Perfromance"""

from sklearn.metrics import accuracy_score

accuracy_score(y_test,y_pred)